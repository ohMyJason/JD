<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lanqiao.jd.dao.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.lanqiao.jd.entity.Product" >
    <id column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="product_price" property="productPrice" jdbcType="INTEGER" />
    <result column="product_img_url" property="productImgUrl" jdbcType="VARCHAR" />
    <result column="stock" property="stock" jdbcType="INTEGER" />
    <result column="business_id" property="businessId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    product_id, product_name, product_price, product_img_url, stock, business_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_product
    where product_id = #{productId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_product
    where product_id = #{productId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lanqiao.jd.entity.Product" >
    insert into tb_product (product_id, product_name, product_price, 
      product_img_url, stock, business_id
      )
    values (#{productId,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR}, #{productPrice,jdbcType=INTEGER}, 
      #{productImgUrl,jdbcType=VARCHAR}, #{stock,jdbcType=INTEGER}, #{businessId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lanqiao.jd.entity.Product" >
    insert into tb_product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="productId != null" >
        product_id,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
      <if test="productPrice != null" >
        product_price,
      </if>
      <if test="productImgUrl != null" >
        product_img_url,
      </if>
      <if test="stock != null" >
        stock,
      </if>
      <if test="businessId != null" >
        business_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productPrice != null" >
        #{productPrice,jdbcType=INTEGER},
      </if>
      <if test="productImgUrl != null" >
        #{productImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="stock != null" >
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="businessId != null" >
        #{businessId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lanqiao.jd.entity.Product" >
    update tb_product
    <set >
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productPrice != null" >
        product_price = #{productPrice,jdbcType=INTEGER},
      </if>
      <if test="productImgUrl != null" >
        product_img_url = #{productImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="stock != null" >
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="businessId != null" >
        business_id = #{businessId,jdbcType=INTEGER},
      </if>
    </set>
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lanqiao.jd.entity.Product" >
    update tb_product
    set product_name = #{productName,jdbcType=VARCHAR},
      product_price = #{productPrice,jdbcType=INTEGER},
      product_img_url = #{productImgUrl,jdbcType=VARCHAR},
      stock = #{stock,jdbcType=INTEGER},
      business_id = #{businessId,jdbcType=INTEGER}
    where product_id = #{productId,jdbcType=INTEGER}
  </update>

<!--Add-->
  <!-- 后台->实现根据商家id进行商品名称的模糊查询 -->
  <select id="selectByProductNameBack" resultMap="BaseResultMap" parameterType="com.lanqiao.jd.entity.Product" >
    select
    <include refid="Base_Column_List" />
    from tb_product
    where business_id = #{businessId,jdbcType=INTEGER} and product_name like concat(concat("%",#{productName,jdbcType=VARCHAR}),"%")
  </select>
</mapper>